#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–æ–¥–µ
 * –ó–∞–º–µ–Ω—è–µ—Ç –≤–Ω–µ—à–Ω–∏–µ URL –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
 */

const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const PRODUCTS_DIR = 'public/images/products';
const MSW_HANDLERS_FILE = 'src/shared/api/msw/handlers.shop.ts';
const MOCK_SHOP_FILE = 'src/shared/hooks/useMockShop.ts';

// –ú–∞–ø–ø–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const PRODUCT_IMAGES = {
  // –ü–µ–ø—Ç–∏–¥—ã
  'peptide-chicken': 'peptides/peptides-peptide-chicken-400x400.jpg',
  'peptide-fish': 'peptides/peptides-peptide-fish-400x400.jpg',
  'peptide-beef': 'peptides/peptides-peptide-beef-400x400.jpg',
  'peptide-skate': 'peptides/peptides-peptide-skate-400x400.jpg',
  
  // –î–æ–±–∞–≤–∫–∏
  'antiparasitic': 'supplements/supplements-antiparasitic-400x400.jpg',
  'calcemarin': 'supplements/supplements-calcemarin-400x400.jpg',
  'nucleamin': 'supplements/supplements-nucleamin-400x400.jpg',
  'resveratrol': 'supplements/supplements-resveratrol-400x400.jpg',
  'argenix': 'supplements/supplements-argenix-400x400.jpg'
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function checkImagesExist() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
  
  const missingImages = [];
  
  for (const [slug, imagePath] of Object.entries(PRODUCT_IMAGES)) {
    const fullPath = path.join(PRODUCTS_DIR, imagePath);
    if (!fs.existsSync(fullPath)) {
      missingImages.push({ slug, imagePath });
    }
  }
  
  if (missingImages.length > 0) {
    console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
    missingImages.forEach(({ slug, imagePath }) => {
      console.log(`   - ${slug}: ${imagePath}`);
    });
    return false;
  }
  
  console.log('‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã!');
  return true;
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª MSW handlers
function updateMSWHandlers() {
  console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º MSW handlers...');
  
  let content = fs.readFileSync(MSW_HANDLERS_FILE, 'utf8');
  
  // –ó–∞–º–µ–Ω—è–µ–º –≤–Ω–µ—à–Ω–∏–µ URL –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
  for (const [slug, imagePath] of Object.entries(PRODUCT_IMAGES)) {
    const oldPattern = new RegExp(`image_url:\\s*['"][^'"]*${slug}[^'"]*['"]`, 'g');
    const newImageUrl = `image_url: '/images/products/${imagePath}'`;
    
    if (content.includes(`slug: '${slug}'`)) {
      // –ù–∞—Ö–æ–¥–∏–º –±–ª–æ–∫ —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º –∏ –∑–∞–º–µ–Ω—è–µ–º image_url
      const productPattern = new RegExp(
        `(\\{[^}]*slug:\\s*['"]${slug}['"][^}]*image_url:\\s*)['"][^'"]*['"]([^}]*\\})`,
        'g'
      );
      content = content.replace(productPattern, `$1'${newImageUrl}'$2`);
    }
  }
  
  fs.writeFileSync(MSW_HANDLERS_FILE, content);
  console.log('‚úÖ MSW handlers –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª useMockShop
function updateMockShop() {
  console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º useMockShop...');
  
  let content = fs.readFileSync(MOCK_SHOP_FILE, 'utf8');
  
  // –ó–∞–º–µ–Ω—è–µ–º –≤–Ω–µ—à–Ω–∏–µ URL –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
  for (const [slug, imagePath] of Object.entries(PRODUCT_IMAGES)) {
    const oldPattern = new RegExp(`image_url:\\s*['"][^'"]*${slug}[^'"]*['"]`, 'g');
    const newImageUrl = `image_url: '/images/products/${imagePath}'`;
    
    if (content.includes(`slug: '${slug}'`)) {
      // –ù–∞—Ö–æ–¥–∏–º –±–ª–æ–∫ —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º –∏ –∑–∞–º–µ–Ω—è–µ–º image_url
      const productPattern = new RegExp(
        `(\\{[^}]*slug:\\s*['"]${slug}['"][^}]*image_url:\\s*)['"][^'"]*['"]([^}]*\\})`,
        'g'
      );
      content = content.replace(productPattern, `$1'${newImageUrl}'$2`);
    }
  }
  
  fs.writeFileSync(MOCK_SHOP_FILE, content);
  console.log('‚úÖ useMockShop –æ–±–Ω–æ–≤–ª–µ–Ω');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  if (!checkImagesExist()) {
    console.log('\n‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞.');
    console.log('üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫:');
    console.log(`   ${PRODUCTS_DIR}/`);
    console.log('   ‚îú‚îÄ‚îÄ peptides/');
    console.log('   ‚îî‚îÄ‚îÄ supplements/');
    return;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
  updateMSWHandlers();
  updateMockShop();
  
  console.log('\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:');
  console.log('   - –ó–∞–º–µ–Ω–µ–Ω—ã –≤–Ω–µ—à–Ω–∏–µ URL –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏');
  console.log('   - –û–±–Ω–æ–≤–ª–µ–Ω—ã MSW handlers');
  console.log('   - –û–±–Ω–æ–≤–ª–µ–Ω useMockShop hook');
  console.log('\nüí° –¢–µ–ø–µ—Ä—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏–∑ –ø–∞–ø–∫–∏ public/images/products/');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main();
}

module.exports = { checkImagesExist, updateMSWHandlers, updateMockShop };
